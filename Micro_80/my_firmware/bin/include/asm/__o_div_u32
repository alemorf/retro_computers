__o_div_u32__result dw 0
__div_32_mod dd 0

__o_div_u32:
    ld bc, hl                    ; __div_32_mod = a
    pop hl
    ex (sp), hl
    ld (__div_32_mod+0), hl
    pop hl
    ex (sp), hl
    ld (__div_32_mod+2), hl
    ld hl, __o_div_u32__ret
__o_div_u32__com:
    ld (__o_div_u32__ra), hl
    ld hl, bc
    ld a, h                      ; if (b == 0) return;
    or l
    or d
    or e
    ret z
    ld c, 1                      ; c = 1;
__o_div_u32__l1:                 ; do
    ld a, (__div_32_mod+0)       ; if (a < b) break;
    sub l
    ld a, (__div_32_mod+1)
    sbc h
    ld a, (__div_32_mod+2)
    sbc e
    ld a, (__div_32_mod+3)
    sbc d
    jp c, __o_div_u32__l2
    inc c
    push hl                      ; push(b);
    push de
    call __o_div_u32__shl_dehl   ; b <<= 1;
    jp nc, __o_div_u32__l1       ; } while(flag_nc);
__o_div_u32__l2:
    ld a, c
    ld (__o_div_u32__lc), a
    ld hl, 0                     ; result = 0
    ld (__o_div_u32__result), hl
    ld de, hl
__o_div_u32__l4:                 ; while(--c != 0) {
__o_div_u32__lc=$+1
    ld a, 0
    dec a
__o_div_u32__ra=$+1
    jp z, __o_div_u32__ret
    ld (__o_div_u32__lc), a

    ld hl, (__o_div_u32__result) ; result <<= 1
    call __o_div_u32__shl_dehl
    ld (__o_div_u32__result), hl

    pop bc                       ; pop(x)
    pop hl

    ld a, (__div_32_mod+0)       ; if (x < __div_32_mod) continue;
    sub l
    ld a, (__div_32_mod+1)
    sbc h
    ld a, (__div_32_mod+2)
    sbc c
    ld a, (__div_32_mod+3)
    sbc b
    jp c, __o_div_u32__l4
    
    ld (__div_32_mod+3), a       ; __div_32_mod -= x
    ld a, (__div_32_mod+0)
    sub l
    ld (__div_32_mod+0), a
    ld a, (__div_32_mod+1)
    sbc h
    ld (__div_32_mod+1), a
    ld a, (__div_32_mod+2)
    sbc c
    ld (__div_32_mod+2), a

    ld hl, (__o_div_u32__result) ; result++;
    inc hl
    ld (__o_div_u32__result), hl
    jp __o_div_u32__l4           ; }

__o_div_u32__ret:                ; return result
    ld hl, (__o_div_u32__result)
    ret

__o_div_u32__shl_dehl:
    ex hl, de
    add hl, hl
    ex hl, de
    push af
    add hl, hl
    jp nc, __o_div_u32__l5
    inc de
__o_div_u32__l5:
    pop af
    ret
    
